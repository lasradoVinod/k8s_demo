apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: lightfoot-daemon
  labels:
    app: lightfoot-daemon
spec:
  selector:
    matchLabels:
      app: lightfoot-daemon
  template:
    metadata:
      labels:
        app: lightfoot-daemon
    spec:
      containers:
      - name: lightfoot
        image: localhost:5000/lightfoot
        ports:
        - containerPort: 12000
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN", "NET_ADMIN"]
          allowPrivilegeEscalation: true
        volumeMounts:
        - mountPath: /host
          name: host-root
          readOnly: true
      volumes:
      - hostPath:
          path: /
          type: Directory
        name: host-root
      hostPID: true
---
# Creating a service account for the watcher
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-viewer
---
# Creating a role for the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-viewer-role
rules:
- apiGroups: [""] # "" represents the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"] 
---
# Binding the role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-viewer-binding
subjects:
  - kind: ServiceAccount
    name: pod-viewer
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-viewer-role
---
apiVersion: v1
kind: Pod
metadata:
  name: watcher-pod
  labels:
    app: watcher
spec:
  containers:
    - name: watcher
      image: localhost:5000/watcher
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
  serviceAccountName: pod-viewer
